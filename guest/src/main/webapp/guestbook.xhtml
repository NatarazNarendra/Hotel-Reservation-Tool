<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:jsf="http://xmlns.jcp.org/jsf"
      xmlns:kh="http://java.sun.com/jsf/composite/org/koenighotze/jee7hotel/guest">

<f:metadata>
    <ui:remove>
        The following parameters are used to inject a successful reservation
        into this page.
    </ui:remove>
    <f:viewParam name="publicGuestId" value="#{guestbookBean.publicGuestId}"/>
    <f:viewParam name="reservationNumber" value="#{guestbookBean.reservationNumber}"/>
    <f:viewParam name="roomNumber" value="#{guestbookBean.roomNumber}"/>
    <f:event type="preRenderView" listener="#{guestbookBean.initReservationMessage}"/>
</f:metadata>

<ui:composition template="/WEB-INF/template-bootstrap.html">
    <ui:define name="page_header">
        #{msgs.guests_so_far}
    </ui:define>

    <ui:define name="content">
        <ui:fragment rendered="#{empty(guestbookBean.guestList)}">
            <div class="alert alert-warning" role="alert">
                #{msgs.no_guests_so_far}
            </div>
        </ui:fragment>

        <ui:fragment rendered="#{empty(guestbookBean.addNewReservationUrl)}">
            <div class="alert alert-warning" role="alert">
                #{msgs.no_new_reservations}
            </div>
        </ui:fragment>


        <form jsf:id="new_guest_form">
            <div class="btn-toolbar">

                <input type="submit"
                       jsf:id="newGuestButton"
                       jsf:action="/add_new_guest.xhtml"
                       class="btn btn-sm btn-primary"
                       value="#{msgs.save_guest_info}">
                </input>

                <input type="submit"
                       jsf:id="fill_initial_guestbook_btn"
                       value="#{msgs.fill_initial_guestbook}"
                       class="btn btn-sm btn-default"
                       jsf:action="#{guestbookBean.fillInitialGuestBook()}">
                </input>
            </div>
        </form>

        <ui:fragment rendered="#{!empty(guestbookBean.guestList)}">
            <form jsf:id="guestbook_form">
                <div id="pagingControls"></div>
                <kh:guestlist id="guestList" guestList="#{guestbookBean.guestList}">
                    <f:facet name="actions">
                        <ul class="action_items">
                            <li>
                                <h:link id="guestDetailsLink"
                                        outcome="guest_details.xhtml?faces-redirect=true"
                                        includeViewParams="true"
                                        value="#{msgs.details}">
                                    <ui:remove>
                                        Note that the value of guest is exposed by the composite component
                                    </ui:remove>
                                    <f:param name="publicGuestId"
                                             value="#{guest.publicId}"/>
                                </h:link>
                            </li>

                            <li>
                                <ui:remove>
                                    If we do it this way, then the producer will be called multiple
                                    times during the JSF lifecycle :(
                                    <!-- h:outputLink value="#{serviceRegistration.addNewReservationUrl}" -->
                                </ui:remove>

                                <ui:fragment rendered="#{!empty(guestbookBean.addNewReservationUrl)}">
                                    <h:outputLink value="#{guestbookBean.addNewReservationUrl}">
                                        <f:param name="publicGuestId" value="#{guest.publicId}"/>
                                        <f:param name="backlink" value="#{request.requestURL}"/>
                                        #{msgs.new_reservation}
                                    </h:outputLink>
                                </ui:fragment>
                            </li>
                        </ul>
                    </f:facet>
                </kh:guestlist>
            </form>
        </ui:fragment>
    </ui:define>

    <ui:define name="miscjavascript">

        <h:outputScript library="common" name="js/pager.js"/>
        <h:outputStylesheet library="common" name="css/pager.css"/>

        <script>
            // note: currently this must be visible globally....this sucks and I will
            // fix the js-library. Scouts promise!
            var pager = new Imtech.Pager();
            (function () {
                $(document).ready(function () {
                    pager.pagingContainerPath = $('tbody'); // set of main container
                    pager.paragraphs = $('tr.pagingRow', pager.pagingContainer); // set of required containers
                    pager.elemTagName = 'tr';
                    pager.showPage(1);
                });
            })();
        </script>

    </ui:define>
</ui:composition>
</html>



